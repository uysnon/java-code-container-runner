import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.socket.server.HandshakeInterceptor;
import org.springframework.web.socket.WebSocketHandler;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.Map;

public class LoggingHandshakeInterceptor implements HandshakeInterceptor {
    private static final Logger logger = LoggerFactory.getLogger(LoggingHandshakeInterceptor.class);

    @Override
    public boolean beforeHandshake(HttpServletRequest request, HttpServletResponse response,
                                   WebSocketHandler wsHandler, Map<String, Object> attributes) throws Exception {
        logger.debug("Before Handshake: {}", request.getRequestURI());
        return true;
    }

    @Override
    public void afterHandshake(HttpServletRequest request, HttpServletResponse response,
                               WebSocketHandler wsHandler, Exception exception) {
        logger.debug("After Handshake: {}", request.getRequestURI());
    }
}
